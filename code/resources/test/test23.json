{
    "id": 23,
    "title": "Регулярные выражения",
    "test": [
        {
            "question": "В каком варианте метод test возвращает false?",
            "answer": ["/'hi'/.test('hi')","/hi/.test('hi')","new RegExp('hi').test('hi')"],
            "correct": 0
        },
        {
            "question": "Какой диапазон позволит проверить строку на наличие всех букв русского алфавита?",
            "answer": ["[А-Яа-я]","[A-Za-z0-9]","[А-ЯËа-яё]"],
            "correct": 2
        },
        {
            "question": "Какое регулярное выражение написано правильно для проверки цены от '0$' и более?",
            "answer": ["/^\\d{1,}$$/","/^\\d{1,}\\$$/","/^\\d{1,}/$$/"],
            "correct": 1
        },
        {
            "question": "Что вернёт метод match, если совпадения с регулярным выражением не найдены?",
            "answer": ["undefined","[]","-1","null"],
            "correct": 3
        },
        {
            "question": "Что включает в себя класс \\D?",
            "answer": ["Любой нецифровой символ","Цифры от 0 до 9","Пробел, таб и перенос строки"],
            "correct": 0
        },
        {
            "question": "Как написать регулярное выражение, чтобы игнорировался регистр строки?",
            "answer": ["/City/.test('city')","/City/i.test('city')","/^City$/g.test('city')"],
            "correct": 1
        },
        {
            "question": "В каком варианте альтернация написана правильно?",
            "answer": ["/^100(km|m)$/","/^100[km-m]$/","/^100[km/m]$/"],
            "correct": 0   
        },
        {
            "question": "Вам нужно проверить, что в константе age содержатся только цифры от 0 до 99, и на выходе получить true. Как это можно сделать?",
            "answer": ["/^[1-9]?[0-9]$/.test(age)","age.test(/^[1-9]?[0-9]$/)","age.search(/^[1-9]?[0-9]$/)"],
            "correct": 0
        }
    ]
}  